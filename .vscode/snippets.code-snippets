{
	// Place your nikobot workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Create a new Hinagi command.": {
		"prefix": "@hinagi:command",
		"body": [
			"import { Command, Declare } from 'seyfert';",
			"",
			"@Declare({",
			"    name: '${1:example}',",
			"    description: '${2:Example description}',",
			"    integrationTypes: ['GuildInstall'],",
			"    contexts: ['Guild']",
			"})",
			"export default class ${3:Example}Command extends Command {}"
		],
		"description": "Create a new Hinagi command."
	},
	"Create a new Hinagi component.": {
		"prefix": "@hinagi:component",
		"body": [
			"import type { ComponentContext } from 'seyfert';",
			"import { ComponentCommand } from 'seyfert';",
			"",
			"export default class ${1:Example}Button extends ComponentCommand {",
			"    componentType = '${2:Example}' as const;",
			"",
			"    filter(ctx: ComponentContext<typeof this.componentType>) {",
			"        return ctx.customId === '${3:example}';",
			"    }",
			"",
			"    async run(ctx: ComponentContext<typeof this.componentType>) { }",
			"}"
		],
		"description": "Create a new Hinagi component."
	}
}